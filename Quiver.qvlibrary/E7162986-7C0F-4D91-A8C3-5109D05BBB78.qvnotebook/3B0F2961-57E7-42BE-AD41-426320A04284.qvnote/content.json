{
  "title": "预处理器",
  "cells": [
    {
      "type": "code",
      "language": "scss",
      "data": "SCSS\n\n变量\n\nscss中可以使用变量,变量已$打头, 例如:\n\n    $blue : #1875e7;　\n    \n    　　div {\n    　　　color : $blue;\n    　　}\n    　　\n    　　\n如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。\n\n　　$side : left;\n\n　　.rounded {\n　　　　border-#{$side}-radius: 5px;\n　　}\n　　\n计算功能\n\nbody {\n　　　　margin: (14px/2);\n　　　　top: 50px + 100px;\n　　　　right: $var * 10%;\n　　}\n　\n嵌套\n\nSASS允许选择器嵌套。比如，下面的CSS代码：\n\n　　div h1 {\n　　　　color : red;\n　　}\n可以写成：\n\n　　div {\n　　　　hi {\n　　　　　　color:red;\n　　　　}\n　　}\n属性也可以嵌套，比如border-color属性，可以写成：\n\n　　p {\n　　　　border: {\n　　　　　　color: red;\n　　　　}\n　　}\n注意，border后面必须加上冒号。\n\n在嵌套的代码块内，可以使用&引用父元素。比如a:hover伪类，可以写成：\n\n　　a {\n　　　　&:hover { color: #ffb3ff; }\n　　}\n　　\n　　\n代码复用\n\n继承\n\nSASS允许一个选择器，继承另一个选择器。比如，现有class1：\n\n　　.class1 {\n　　　　border: 1px solid #ddd;\n　　}\nclass2要继承class1，就要使用@extend命令：\n\n　　.class2 {\n　　　　@extend .class1;\n　　　　font-size:120%;\n　　}\n　　\n　　\nmixin\n\n使用@mixin命令，定义一个代码块。\n\n　　@mixin left {\n　　　　float: left;\n　　　　margin-left: 10px;\n　　}\n使用@include命令，调用这个mixin。\n\n　　div {\n　　　　@include left;\n　　}\nmixin的强大之处，在于可以指定参数和缺省值。\n\n　　@mixin left($value: 10px) {\n　　　　float: left;\n　　　　margin-right: $value;\n　　}\n使用的时候，根据需要加入参数：\n\n　　div {\n　　　　@include left(20px);\n　　}\n下面是一个mixin的实例，用来生成浏览器前缀。\n\n　　@mixin rounded($vert, $horz, $radius: 10px) {\n　　　　border-#{$vert}-#{$horz}-radius: $radius;\n　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;\n　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;\n　　}\n使用的时候，可以像下面这样调用：\n\n　　#navbar li { @include rounded(top, left); }\n　　  #footer { @include rounded(top, left, 5px); }\n　　  "
    }
  ]
}